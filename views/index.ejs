<!DOCTYPE html>
<meta charset="utf-8" />
<title>WebSocket Test</title>
    <script type="text/javascript" src = "/javascripts/jquery.js"></script>
    <script language="javascript" type="text/javascript">
        var Uri = "http://" + window.location.href.substring(window.location.protocol.length) + '/tucao';
        // var wsUri = 'ws:' + window.location.href.substring(window.location.protocol.length);
        var timeStamp = '';
        var output;
        function init() {
            output = document.getElementById("output");
            console.log(Uri);
            $.post(Uri, {timeStamp: timeStamp}, function(data){
                console.log(data);
            });
            // createWebSocket();
        }
        function createWebSocket() {
            websocket = new WebSocket(wsUri);
            websocket.onopen = function (evt) { onOpen(evt) };
            websocket.onclose = function (evt) { onClose(evt) };
            websocket.onmessage = function (evt) { onMessage(evt) };
            websocket.onerror = function (evt) { onError(evt) };
        }
        function onOpen(evt) {
            writeToScreen("CONNECTED");
            var messageInfo = { command: 'subscribe', content: 'r5001,reader1' };
            doSend(JSON.stringify(messageInfo));

            var messageInfoGetTags = { command: 'alltags', content: '' };
            doSend(JSON.stringify(messageInfoGetTags));
        }
        function onClose(evt) {
            writeToScreen("DISCONNECTED");
        }
        function onMessage(evt) {
            // writeToScreen('<span style="color: blue;">RESPONSE: ' + evt.data+'</span>');
            var tags = JSON.parse(evt.data);
            if (tags.length > 0) {
                for (var i = 0; i < tags.length; i++) {
                    var tag = tags[i];
                    writeToScreen("antennaID : " + tag.antennaID + " | epc : " + tag.epc + " | " + tag.Event);
                }
                writeToScreen("---------------------------------------------------------------------");
            }
            //websocket.close();
        }
        function onError(evt) {
            writeToScreen('<span style="color: red;">ERROR:</span> ' + evt.data);
        }
        function doSend(message) {
            writeToScreen("SENT: " + message);
            websocket.send(message);
        }
        function writeToScreen(message) {
            var pre = document.createElement("p");
            pre.style.wordWrap = "break-word";
            pre.innerHTML = message;
            output.appendChild(pre);
        }
        window.addEventListener("load", init, false);
</script>

<h2>吐槽列表</h2>
<div id="output"></div>
</html>
  
  